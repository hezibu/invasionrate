// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rcpparma_hello_world
arma::mat rcpparma_hello_world();
RcppExport SEXP _sacII_rcpparma_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpparma_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_outerproduct
arma::mat rcpparma_outerproduct(const arma::colvec& x);
RcppExport SEXP _sacII_rcpparma_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_outerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_innerproduct
double rcpparma_innerproduct(const arma::colvec& x);
RcppExport SEXP _sacII_rcpparma_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_innerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_bothproducts
Rcpp::List rcpparma_bothproducts(const arma::colvec& x);
RcppExport SEXP _sacII_rcpparma_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_bothproducts(x));
    return rcpp_result_gen;
END_RCPP
}
// triu
arma::mat triu(arma::mat m, int n);
RcppExport SEXP _sacII_triu(SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(triu(m, n));
    return rcpp_result_gen;
END_RCPP
}
// tril
arma::mat tril(arma::mat m, int n);
RcppExport SEXP _sacII_tril(SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(tril(m, n));
    return rcpp_result_gen;
END_RCPP
}
// colProds
arma::rowvec colProds(arma::mat m);
RcppExport SEXP _sacII_colProds(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(colProds(m));
    return rcpp_result_gen;
END_RCPP
}
// count_pi_mat
arma::mat count_pi_mat(arma::mat S, arma::mat i, NumericVector params, NumericVector constant);
RcppExport SEXP _sacII_count_pi_mat(SEXP SSEXP, SEXP iSEXP, SEXP paramsSEXP, SEXP constantSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type i(iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type constant(constantSEXP);
    rcpp_result_gen = Rcpp::wrap(count_pi_mat(S, i, params, constant));
    return rcpp_result_gen;
END_RCPP
}
// count_pi_double
arma::rowvec count_pi_double(arma::rowvec S, double i, NumericVector params, NumericVector constant);
RcppExport SEXP _sacII_count_pi_double(SEXP SSEXP, SEXP iSEXP, SEXP paramsSEXP, SEXP constantSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type S(SSEXP);
    Rcpp::traits::input_parameter< double >::type i(iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type constant(constantSEXP);
    rcpp_result_gen = Rcpp::wrap(count_pi_double(S, i, params, constant));
    return rcpp_result_gen;
END_RCPP
}
// count_p
arma::mat count_p(double i, NumericVector params, NumericVector constant);
RcppExport SEXP _sacII_count_p(SEXP iSEXP, SEXP paramsSEXP, SEXP constantSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type i(iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type constant(constantSEXP);
    rcpp_result_gen = Rcpp::wrap(count_p(i, params, constant));
    return rcpp_result_gen;
END_RCPP
}
// count_m
arma::rowvec count_m(NumericVector i, NumericVector params, NumericVector constant);
RcppExport SEXP _sacII_count_m(SEXP iSEXP, SEXP paramsSEXP, SEXP constantSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type i(iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type constant(constantSEXP);
    rcpp_result_gen = Rcpp::wrap(count_m(i, params, constant));
    return rcpp_result_gen;
END_RCPP
}
// count_log_like
double count_log_like(NumericVector first_record_data, NumericVector params, NumericVector constant);
RcppExport SEXP _sacII_count_log_like(SEXP first_record_dataSEXP, SEXP paramsSEXP, SEXP constantSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type first_record_data(first_record_dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type constant(constantSEXP);
    rcpp_result_gen = Rcpp::wrap(count_log_like(first_record_data, params, constant));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sacII_rcpparma_hello_world", (DL_FUNC) &_sacII_rcpparma_hello_world, 0},
    {"_sacII_rcpparma_outerproduct", (DL_FUNC) &_sacII_rcpparma_outerproduct, 1},
    {"_sacII_rcpparma_innerproduct", (DL_FUNC) &_sacII_rcpparma_innerproduct, 1},
    {"_sacII_rcpparma_bothproducts", (DL_FUNC) &_sacII_rcpparma_bothproducts, 1},
    {"_sacII_triu", (DL_FUNC) &_sacII_triu, 2},
    {"_sacII_tril", (DL_FUNC) &_sacII_tril, 2},
    {"_sacII_colProds", (DL_FUNC) &_sacII_colProds, 1},
    {"_sacII_count_pi_mat", (DL_FUNC) &_sacII_count_pi_mat, 4},
    {"_sacII_count_pi_double", (DL_FUNC) &_sacII_count_pi_double, 4},
    {"_sacII_count_p", (DL_FUNC) &_sacII_count_p, 3},
    {"_sacII_count_m", (DL_FUNC) &_sacII_count_m, 3},
    {"_sacII_count_log_like", (DL_FUNC) &_sacII_count_log_like, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_sacII(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
